<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/VKUser.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/VKUser</TokenIdentifier>
			<Abstract type="html">This class represents VKontakte user, which can issue API requests like
manipulations with groups, friends, music, video, etc.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setDelegate:</TokenIdentifier>
			<Abstract type="html">VKRequest Delegate</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/delegate</TokenIdentifier>
			<Abstract type="html">VKRequest Delegate</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/delegate</TokenIdentifier>
			<Abstract type="html">VKRequest Delegate</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong, readwrite) id&lt;VKRequestDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setAccessToken:</TokenIdentifier>
			<Abstract type="html">Current active user&apos;s access token</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accessToken</TokenIdentifier>
			<Abstract type="html">Current active user&apos;s access token</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/accessToken</TokenIdentifier>
			<Abstract type="html">Current active user&apos;s access token</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) VKAccessToken *accessToken</Declaration>
			
			
			<Anchor>//api/name/accessToken</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setStartAllRequestsImmediately:</TokenIdentifier>
			<Abstract type="html">Delayed request start, by default equals to YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/startAllRequestsImmediately</TokenIdentifier>
			<Abstract type="html">Delayed request start, by default equals to YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/startAllRequestsImmediately</TokenIdentifier>
			<Abstract type="html">Delayed request start, by default equals to YES.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL startAllRequestsImmediately</Declaration>
			
			
			<Anchor>//api/name/startAllRequestsImmediately</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/setOfflineMode:</TokenIdentifier>
			<Abstract type="html">Offline mode. In this mode is enabled data will be returned from cache even if
it expired. By default this mode is turned off</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/offlineMode</TokenIdentifier>
			<Abstract type="html">Offline mode. In this mode is enabled data will be returned from cache even if
it expired. By default this mode is turned off</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/VKUser/offlineMode</TokenIdentifier>
			<Abstract type="html">Offline mode. In this mode is enabled data will be returned from cache even if
it expired. By default this mode is turned off</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign, readwrite) BOOL offlineMode</Declaration>
			
			
			<Anchor>//api/name/offlineMode</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/currentUser</TokenIdentifier>
			<Abstract type="html">Current active user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (instancetype)currentUser</Declaration>
			
			
			<Anchor>//api/name/currentUser</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/activateUserWithID:</TokenIdentifier>
			<Abstract type="html">Set user with user id as active</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)activateUserWithID:(NSUInteger)userID</Declaration>
			<Parameters>
				<Parameter>
					<Name>userID</Name>
					<Abstract type="html">user id</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if user was activated, otherwise NO</Abstract></ReturnValue>
			<Anchor>//api/name/activateUserWithID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/VKUser/localUsers</TokenIdentifier>
			<Abstract type="html">Retreive a list of all available users in storage</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)localUsers</Declaration>
			
			<ReturnValue><Abstract type="html">Array with available user id&apos;s</Abstract></ReturnValue>
			<Anchor>//api/name/localUsers</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/info</TokenIdentifier>
			<Abstract type="html">Returns detailed information on current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)info</Declaration>
			
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/info</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/info:</TokenIdentifier>
			<Abstract type="html">Information about user(s) with requested parameters</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)info:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters which will be requested</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/info:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/search:</TokenIdentifier>
			<Abstract type="html">Returns a list of users matching the search criteria</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)search:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">search criteria fields</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/search:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/subscriptions:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of users and communities followed by the user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)subscriptions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameter fields</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/subscriptions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/followers:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of followers of the user in question, sorted by date added, most recent first</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)followers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameter fields</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/followers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/description</TokenIdentifier>
			<Abstract type="html">Current user description</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (NSString *)description</Declaration>
			
			
			<Anchor>//api/name/description</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of a user&apos;s friends or detailed information about a user&apos;s friends</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetOnline:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of a user&apos;s friends who are online</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetOnline:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetOnline:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetMutual:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of the mutual friends of two users</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetMutual:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list https://vk.com/dev/friends.getMutual</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetMutual:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetRecent:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of the current&apos;s user recently added friends</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetRecent:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetRecent:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetRequests:</TokenIdentifier>
			<Abstract type="html">Returns information about a user&apos;s incoming and outgoing friend requests</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetRequests:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetRequests:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAdd:</TokenIdentifier>
			<Abstract type="html">Approves or creates a friend request.
If the selected user ID is in the friend request list obtained using the friends.getRequests method, approves the friend request and adds the selected user to the current user&apos;s friend list. Otherwise, creates a friend request from the current user for the selected user.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsEdit:</TokenIdentifier>
			<Abstract type="html">Edits lists of friends for the selected friend.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a user from the current user&apos;s friend list or declines a friend request.
If the selected user ID is in the friend request list obtained using the friends.getRequests method, declines the friend request for the current user. Otherwise, deletes the selected user from the friend list of the current user obtained using the friends.get method.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetLists:</TokenIdentifier>
			<Abstract type="html">Returns a friend tag list of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetLists:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetLists:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAddList:</TokenIdentifier>
			<Abstract type="html">Creates a new friend list for the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAddList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAddList:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsEditList:</TokenIdentifier>
			<Abstract type="html">Edits an existing friend list of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsEditList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsEditList:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDeleteList:</TokenIdentifier>
			<Abstract type="html">Deletes an existing friend list of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDeleteList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDeleteList:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetAppUsers:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of the current user&apos;s friends who installed the application</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetAppUsers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetAppUsers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetByPhones:</TokenIdentifier>
			<Abstract type="html">Returns a list of user&apos;s friends whose phone numbers, validated or specified in a profile, are in the list.
The method can only be used if current user&apos;s mobile phone number is validated. To check this condition you can use the users.get method with uids=APIUSER and fields=hasmobile parameters where API_USER is equal to current user ID.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetByPhones:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetByPhones:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsDeleteAllRequests:</TokenIdentifier>
			<Abstract type="html">Marks all incoming friend requests as viewed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsDeleteAllRequests:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsDeleteAllRequests:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsGetSuggestions:</TokenIdentifier>
			<Abstract type="html">Returns a list of profiles of users the current user may know.
For the method to return enough suggestions, method account.importContacts shall be called first.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsGetSuggestions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsGetSuggestions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/friendsAreFriends:</TokenIdentifier>
			<Abstract type="html">Returns information whether the current user is a friend of the specified users.
Also, returns information whether there is an outgoing or incoming friend request (new follower).</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)friendsAreFriends:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/friendsAreFriends:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGet:</TokenIdentifier>
			<Abstract type="html">Returns data required to show newsfeed for the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetRecommended:</TokenIdentifier>
			<Abstract type="html">Returns a list of newsfeeds recommended to the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetRecommended:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetRecommended:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments in the current user&apos;s newsfeed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetMentions:</TokenIdentifier>
			<Abstract type="html">Returns a list of posts on user walls in which the current user is mentioned</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetMentions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetMentions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetBanned:</TokenIdentifier>
			<Abstract type="html">Returns a list of users and communities banned from the current user&apos;s newsfeed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetBanned:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetBanned:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedAddBan:</TokenIdentifier>
			<Abstract type="html">Prevents news from specified users and communities from appearing in the current user&apos;s newsfeed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedAddBan:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedAddBan:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedDeleteBan:</TokenIdentifier>
			<Abstract type="html">Allows news from previously banned users and communities to be shown in the current user&apos;s newsfeed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedDeleteBan:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedDeleteBan:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedSearch:</TokenIdentifier>
			<Abstract type="html">Returns search results by statuses</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedGetLists:</TokenIdentifier>
			<Abstract type="html">Returns a list of newsfeeds followed by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedGetLists:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedGetLists:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/newsfeedUnsubscribe:</TokenIdentifier>
			<Abstract type="html">Unsubscribes the current user from specified newsfeeds</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)newsfeedUnsubscribe:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/newsfeedUnsubscribe:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of posts on a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetByID:</TokenIdentifier>
			<Abstract type="html">Returns a list of posts from user or community walls by their IDs.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallSavePost:</TokenIdentifier>
			<Abstract type="html">Saves a post on a user wall. The post can contain a photo previously uploaded to the VK server or any available photo from one of the user&apos;s albums.
When run from the user wall, the application opens in a 607x412-pixel window and receives the parameters described here.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallSavePost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallSavePost:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallPost:</TokenIdentifier>
			<Abstract type="html">Adds a new post on a user wall or community wall. Can also be used to publish suggested or scheduled posts.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallPost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallPost:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRepost:</TokenIdentifier>
			<Abstract type="html">Reposts (copies) an object to a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRepost:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallRepost:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetReposts:</TokenIdentifier>
			<Abstract type="html">Returns information about reposts of a post on user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetReposts:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetReposts:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallEdit:</TokenIdentifier>
			<Abstract type="html">Edits a post on a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a post from a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRestore:</TokenIdentifier>
			<Abstract type="html">Restores a post deleted from a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallRestore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments on a post on a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallAddComment:</TokenIdentifier>
			<Abstract type="html">Adds a comment to a post on a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallAddComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallAddComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallDeleteComment:</TokenIdentifier>
			<Abstract type="html">Deletes a comment on a post on a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallDeleteComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/wallRestoreComment:</TokenIdentifier>
			<Abstract type="html">Restores a comment deleted from a user wall or community wall</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)wallRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/wallRestoreComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesGet:</TokenIdentifier>
			<Abstract type="html">Returns information about a wiki page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesSave:</TokenIdentifier>
			<Abstract type="html">Saves the text of a wiki page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesSave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesSaveAccess:</TokenIdentifier>
			<Abstract type="html">Saves modified read and edit access settings for a wiki page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesSaveAccess:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesSaveAccess:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesGetHistory:</TokenIdentifier>
			<Abstract type="html">Returns a list of all previous versions of a wiki page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesGetHistory:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesGetHistory:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesGetTitles:</TokenIdentifier>
			<Abstract type="html">Returns a list of wiki pages in a group</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesGetTitles:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesGetTitles:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesGetVersion:</TokenIdentifier>
			<Abstract type="html">Returns the text of one of the previous versions of a wiki page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesGetVersion:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesGetVersion:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pagesParseWiki:</TokenIdentifier>
			<Abstract type="html">Returns HTML representation of the wiki markup</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pagesParseWiki:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pagesParseWiki:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsIsMember:</TokenIdentifier>
			<Abstract type="html">Returns information specifying whether a user is a member of a community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsIsMember:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsIsMember:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetByID:</TokenIdentifier>
			<Abstract type="html">Returns information about communities by their IDs.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of the communities to which a user belongs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetMembers:</TokenIdentifier>
			<Abstract type="html">Returns a list of community members</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetMembers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetMembers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsJoin:</TokenIdentifier>
			<Abstract type="html">With this method you can join the group or public page, and also confirm your participation in an event</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsJoin:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsJoin:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsLeave:</TokenIdentifier>
			<Abstract type="html">With this method you can leave a group, public page, or event</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsLeave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsLeave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsSearch:</TokenIdentifier>
			<Abstract type="html">Searches for communities by substring</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetInvites:</TokenIdentifier>
			<Abstract type="html">Returns a list of invitations to join communities and events</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetInvites:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetInvites:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsBanUser:</TokenIdentifier>
			<Abstract type="html">Adds a user to a community blacklist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsBanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsBanUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsUnbanUser:</TokenIdentifier>
			<Abstract type="html">Deletes a user from a community blacklist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsUnbanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsUnbanUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/groupsGetBanned:</TokenIdentifier>
			<Abstract type="html">Returns a list of users on a community blacklist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)groupsGetBanned:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/groupsGetBanned:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesAdd:</TokenIdentifier>
			<Abstract type="html">Adds a new location into the location database.
Created location will be shown in search by locations only for the user who added it.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetByID:</TokenIdentifier>
			<Abstract type="html">Returns information about locations by their IDs.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesSearch:</TokenIdentifier>
			<Abstract type="html">Returns a list of locations, found under the specified search criteria.
Locations, added by website moderators and the current user, are searched. Locations are shown in the list sorted by increase of the distance from the initial search point.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesCheckIn:</TokenIdentifier>
			<Abstract type="html">Checks a user in at the specified location</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesCheckIn:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesCheckIn:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetCheckins:</TokenIdentifier>
			<Abstract type="html">Returns a list of user check-ins at locations according to the set parameters</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetCheckins:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetCheckins:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetTypes:</TokenIdentifier>
			<Abstract type="html">Returns a list of all types of locations</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetTypes:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetTypes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetContries:</TokenIdentifier>
			<Abstract type="html">Returns a list of countries</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetContries:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetContries:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetRegions:</TokenIdentifier>
			<Abstract type="html">Returns a list of regions</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetRegions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetRegions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetStreetByID:</TokenIdentifier>
			<Abstract type="html">Returns an information about streets by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetStreetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetStreetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetCountryByID:</TokenIdentifier>
			<Abstract type="html">Returns information about countries by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetCountryByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetCountryByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetCities:</TokenIdentifier>
			<Abstract type="html">Returns a list of cities</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetCities:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetCities:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/placesGetCityByID:</TokenIdentifier>
			<Abstract type="html">Returns information about cities by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)placesGetCityByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/placesGetCityByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of audio files of a user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetByID:</TokenIdentifier>
			<Abstract type="html">Returns information about audio files by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetLyrics:</TokenIdentifier>
			<Abstract type="html">Returns lyrics corresponding to an audio file.
The lyrics_id parameter is required for text identification and can be received using audio.get, audio.getById or audio.search method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetLyrics:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetLyrics:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSearch:</TokenIdentifier>
			<Abstract type="html">Returns a list of audio files</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns server address to upload audio files</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSave:</TokenIdentifier>
			<Abstract type="html">Saves audio files after successful uploading</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioSave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioAdd:</TokenIdentifier>
			<Abstract type="html">Copies an audio file to a user page or community page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioDelete:</TokenIdentifier>
			<Abstract type="html">Deletes an audio file from a user page or community page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioEdit:</TokenIdentifier>
			<Abstract type="html">Edits an audio file on a user or community page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioReorder:</TokenIdentifier>
			<Abstract type="html">Reorders the audio file, placing it between audio files with IDs specified by after and before parameters</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioReorder:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioReorder:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioRestore:</TokenIdentifier>
			<Abstract type="html">Restores a deleted audio file</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioRestore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetAlbums:</TokenIdentifier>
			<Abstract type="html">Returns a list of audio albums of a user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetAlbums:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioAddAlbum:</TokenIdentifier>
			<Abstract type="html">Creates an empty audio album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioAddAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioAddAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioEditAlbum:</TokenIdentifier>
			<Abstract type="html">Edits the title of an audio album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioEditAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Deletes an audio album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioDeleteAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioMoveToAlbum:</TokenIdentifier>
			<Abstract type="html">Moves audio files to an album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioMoveToAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioMoveToAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioSetBroadcast:</TokenIdentifier>
			<Abstract type="html">Activates an audio broadcast to the status of a user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioSetBroadcast:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioSetBroadcast:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetBroadcastList:</TokenIdentifier>
			<Abstract type="html">Returns a list of the user&apos;s friends and communities that are broadcasting music in their status messages</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetBroadcastList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetBroadcastList:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetRecommendations:</TokenIdentifier>
			<Abstract type="html">Returns a list of suggested audio files based on a user&apos;s playlist or a particular audio file</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetRecommendations:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetRecommendations:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetPopular:</TokenIdentifier>
			<Abstract type="html">Returns an audio list from the &quot;Popular&quot;</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetPopular:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetPopular:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/audioGetCount:</TokenIdentifier>
			<Abstract type="html">Returns the total number of audio files on a user or community page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)audioGetCount:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/audioGetCount:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountGetCounters:</TokenIdentifier>
			<Abstract type="html">Returns non-null values of user counters</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountGetCounters:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountGetCounters:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountSetNameInMenu:</TokenIdentifier>
			<Abstract type="html">Sets an application screen name (up to 17 characters), that is shown to the user in the left menu.
This happens only in case the user added such application in the left menu from application page, from list of applications and settings</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountSetNameInMenu:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountSetNameInMenu:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountSetOnline:</TokenIdentifier>
			<Abstract type="html">Marks the current user as online for 15 minutes</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountSetOnline:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountSetOnline:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountImportContacts:</TokenIdentifier>
			<Abstract type="html">Gets user&apos;s contact list to search VK-registered users with friends.getSuggestions method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountImportContacts:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountImportContacts:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountRegisterDevice:</TokenIdentifier>
			<Abstract type="html">Subscribes an iOS/Android-based device to receive push notifications</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountRegisterDevice:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountRegisterDevice:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountUnregisterDevice:</TokenIdentifier>
			<Abstract type="html">Unsubscribes a device from push notifications</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountUnregisterDevice:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountUnregisterDevice:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountSetSilenceMode:</TokenIdentifier>
			<Abstract type="html">Mutes in parameters of sent push notifications for the set period of time</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountSetSilenceMode:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountSetSilenceMode:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountGetPushSettings:</TokenIdentifier>
			<Abstract type="html">Gets settings of push notifications</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountGetPushSettings:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountGetPushSettings:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountGetAppPermissions:</TokenIdentifier>
			<Abstract type="html">Gets settings of the current user in this application</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountGetAppPermissions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountGetAppPermissions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountGetActiveOffers:</TokenIdentifier>
			<Abstract type="html">Returns a list of active ads (offers) which executed by the user will bring him/her respective number of votes to his balance in the application.
To show the user one or all ads you can use showLeadsPaymentBox JS API method. After the user completed one of the campaigns offer to him/her, votes will be automatically entered to user&apos;s balance in the application. In this case, the application can write off the required number of votes by converting them into the application&apos;s internal currency.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountGetActiveOffers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountGetActiveOffers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountBanUser:</TokenIdentifier>
			<Abstract type="html">Adds user to the banlist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountBanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountBanUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountUnbanUser:</TokenIdentifier>
			<Abstract type="html">Deletes user from the banlist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountUnbanUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountUnbanUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/accountGetBanned:</TokenIdentifier>
			<Abstract type="html">Returns a user&apos;s blacklist</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)accountGetBanned:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/accountGetBanned:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsGet:</TokenIdentifier>
			<Abstract type="html">Returns detailed information about user or community documents</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsGetByID:</TokenIdentifier>
			<Abstract type="html">Returns information about documents by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsGetUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns server address to upload documents</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsGetUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsGetUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsGetWallUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns a server address to upload documents to Sent folder, so the document can be posted on the wall or sent as a private message later</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsGetWallUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsGetWallUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsSave:</TokenIdentifier>
			<Abstract type="html">Saves a document after uploading it to a server</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsSave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsDelete:</TokenIdentifier>
			<Abstract type="html">Deletes user or community documents</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/docsAdd:</TokenIdentifier>
			<Abstract type="html">Copies a document to a user&apos;s document list</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)docsAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/docsAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pollsGetByID:</TokenIdentifier>
			<Abstract type="html">Returns detailed information about a poll by its ID</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pollsGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pollsGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pollsAddVote:</TokenIdentifier>
			<Abstract type="html">Adds the current user&apos;s vote to the selected answer in the poll</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pollsAddVote:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pollsAddVote:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pollsDeleteVote:</TokenIdentifier>
			<Abstract type="html">Deletes the current user&apos;s vote from the selected answer in the poll</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pollsDeleteVote:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pollsDeleteVote:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/pollsGetVoters:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of users who selected specific answers in the poll</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)pollsGetVoters:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/pollsGetVoters:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notificationsGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of notifications about feedback of other users to the current user&apos;s wall posts</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notificationsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notificationsGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notificationsMarkeAsViewed:</TokenIdentifier>
			<Abstract type="html">Resets the counter of new notifications about feedback of other users to the current user&apos;s entries</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notificationsMarkeAsViewed:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notificationsMarkeAsViewed:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardGetTopics:</TokenIdentifier>
			<Abstract type="html">Returns a list of topics within the discussion board of the specified group</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardGetTopics:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardGetTopics:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments in the specified topic</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardAddTopic:</TokenIdentifier>
			<Abstract type="html">Creates a new topic in the list of the group discussion board</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardAddTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardAddTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardAddComment:</TokenIdentifier>
			<Abstract type="html">Adds a new comment in the community topic</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardAddComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardAddComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardDeleteTopic:</TokenIdentifier>
			<Abstract type="html">Deletes a topic form a group board</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardDeleteTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardDeleteTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardEditTopic:</TokenIdentifier>
			<Abstract type="html">Edits topic title in the list of the group discussion board</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardEditTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardEditTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardEditComment:</TokenIdentifier>
			<Abstract type="html">Edits one of the comments in the group topic</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardEditComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardRestoreComment:</TokenIdentifier>
			<Abstract type="html">Restores a deleted comment of the topic in the group discussion board</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardRestoreComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardDeleteComment:</TokenIdentifier>
			<Abstract type="html">Deletes comment in the topic of the group discussion board</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardDeleteComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardOpenTopic:</TokenIdentifier>
			<Abstract type="html">Opens a topic which was earlier closed (it will be possible to post new messages in this topic)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardOpenTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardOpenTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardCloseTopic:</TokenIdentifier>
			<Abstract type="html">Closes a topic in the list of group threads (no messages can be posted in this topic)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardCloseTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardCloseTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardFixTopic:</TokenIdentifier>
			<Abstract type="html">Fixes a topic in the list of group threads (when sorting, this topic will always be shown in the top)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardFixTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardFixTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/boardUnfixTopic:</TokenIdentifier>
			<Abstract type="html">Unfixes a topic in the list of group threads (this topic will be shown in accordance with the chosen type of sorting)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)boardUnfixTopic:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/boardUnfixTopic:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosCreateAlbum:</TokenIdentifier>
			<Abstract type="html">Creates an empty photo album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosCreateAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosCreateAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEditAlbum:</TokenIdentifier>
			<Abstract type="html">Edits album data for the user&apos;s photos.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosEditAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAlbums:</TokenIdentifier>
			<Abstract type="html">Returns a list of a user&apos;s or community&apos;s photo albums</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAlbums:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of a user&apos;s or community&apos;s photos</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAlbumsCount:</TokenIdentifier>
			<Abstract type="html">Returns the number of albums belonging to a user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAlbumsCount:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAlbumsCount:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetProfile:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos from a user&apos;s or community&apos;s page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetProfile:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetProfile:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetByID:</TokenIdentifier>
			<Abstract type="html">Returns information about photos by their IDs</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns the server address for photo upload.
When uploaded successfully, the photo can be saved with the photos.save method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetProfileUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns server address for photo upload onto a user&apos;s page.
When uploaded successfully, the photo can be saved with the photos.saveProfilePhoto method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetProfileUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetProfileUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetChatUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns an upload link for multichat cover pictures</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetChatUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetChatUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveProfilePhoto:</TokenIdentifier>
			<Abstract type="html">Saves a user&apos;s photo after being uploaded successfully.
You can get an address for photo upload with photos.getProfileUploadServer method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveProfilePhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveProfilePhoto:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveWallPhoto:</TokenIdentifier>
			<Abstract type="html">Saves a photo after being uploaded successfully. URL obtained with photos.getWallUploadServer method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveWallPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveWallPhoto:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetWallUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns the server address for photo upload onto a user&apos;s wall.
When uploaded successfully, the photo can be saved using the photos.saveWallPhoto method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetWallUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetWallUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetMessagesUploadServer:</TokenIdentifier>
			<Abstract type="html">Returns the server address for photo upload in a private message for a user.
When uploaded successfully, the photo can be saved using the photos.saveMessagesPhoto method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetMessagesUploadServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetMessagesUploadServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSaveMessagesPhoto:</TokenIdentifier>
			<Abstract type="html">Saves a photo after being successfully uploaded. URL obtained with photos.getMessagesUploadServer method</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSaveMessagesPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosSaveMessagesPhoto:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSearch:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos by search criteria</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosSave:</TokenIdentifier>
			<Abstract type="html">Saves photos after successful uploading</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosSave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEdit:</TokenIdentifier>
			<Abstract type="html">Edits the caption of a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosMove:</TokenIdentifier>
			<Abstract type="html">Moves a photo from one album to another</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosMove:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosMove:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosMakeCover:</TokenIdentifier>
			<Abstract type="html">Makes a photo into an album cover</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosMakeCover:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosMakeCover:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosReorderAlbums:</TokenIdentifier>
			<Abstract type="html">Reorders the album in the list of user albums</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosReorderAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosReorderAlbums:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosReorderPhotos:</TokenIdentifier>
			<Abstract type="html">Reorders the photo in the list of photos of the user album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosReorderPhotos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosReorderPhotos:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAll:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos belonging to a user or community, in reverse chronological order</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAll:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAll:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetUserPhotos:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos in which a user is tagged</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetUserPhotos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetUserPhotos:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Deletes a photo album belonging to the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosDeleteAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosConfirmTagWithCusomOptions:</TokenIdentifier>
			<Abstract type="html">Confirms a tag on a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosConfirmTagWithCusomOptions:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosConfirmTagWithCusomOptions:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments on a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetAllComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments on a specific photo album or all albums of the user sorted in reverse chronological order</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetAllComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetAllComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosCreateComment:</TokenIdentifier>
			<Abstract type="html">Adds a new comment on the photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosCreateComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosCreateComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosDeleteComment:</TokenIdentifier>
			<Abstract type="html">Deletes a comment on the photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosDeleteComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosRestoreComment:</TokenIdentifier>
			<Abstract type="html">Restores a deleted comment on a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosRestoreComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosEditComment:</TokenIdentifier>
			<Abstract type="html">Edits a comment on a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosEditComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetTags:</TokenIdentifier>
			<Abstract type="html">Returns a list of tags on a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosPutTag:</TokenIdentifier>
			<Abstract type="html">Adds a tag on the photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosPutTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosPutTag:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosRemoveTag:</TokenIdentifier>
			<Abstract type="html">Removes a tag from a photo</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosRemoveTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosRemoveTag:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/photosGetNewTags:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos with tags that have not been viewed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)photosGetNewTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/photosGetNewTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of incoming or outgoing private messages of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetDialogs:</TokenIdentifier>
			<Abstract type="html">Returns a list of current user&apos;s conversations</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetDialogs:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetDialogs:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetByID:</TokenIdentifier>
			<Abstract type="html">Returns messages by their id</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSearch:</TokenIdentifier>
			<Abstract type="html">Returns a list of found private messages of the current user by filled-in search bar</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetHistory:</TokenIdentifier>
			<Abstract type="html">Returns message history for the specified user or group chat</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetHistory:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetHistory:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSend:</TokenIdentifier>
			<Abstract type="html">Sends a message</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSend:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSend:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a message</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDeleteDialog:</TokenIdentifier>
			<Abstract type="html">Deletes all private messages in conversation</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDeleteDialog:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDeleteDialog:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesRestore:</TokenIdentifier>
			<Abstract type="html">Restores deleted message</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesRestore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsNew:</TokenIdentifier>
			<Abstract type="html">Marks messages as unread</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsNew:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsNew:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsRead:</TokenIdentifier>
			<Abstract type="html">Marks messages as read</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsRead:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsRead:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesMarkAsImportant:</TokenIdentifier>
			<Abstract type="html">Marks and unmarks messages as important (starred)</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesMarkAsImportant:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesMarkAsImportant:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLongPollServer:</TokenIdentifier>
			<Abstract type="html">Returns data required for connection to a Long Poll server.
With Long Poll connection you can immediately know about incoming messages and other events</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLongPollServer:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetLongPollServer:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLongPollHistory:</TokenIdentifier>
			<Abstract type="html">Returns updates in user&apos;s private messages.
To speed up handling of private messages it can be useful to cache previously loaded messages on a user&apos;s mobile device/desktop, to prevent re-receipt at each call. With this method you can synchronize a local copy of the message list with the actual version.</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLongPollHistory:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetLongPollHistory:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetChat:</TokenIdentifier>
			<Abstract type="html">Returns information about a chat</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetChat:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesCreateChat:</TokenIdentifier>
			<Abstract type="html">Creates a chat with several participants</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesCreateChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesCreateChat:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesEditChat:</TokenIdentifier>
			<Abstract type="html">Changes chat title</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesEditChat:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesEditChat:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetChatUsers:</TokenIdentifier>
			<Abstract type="html">Gets a list of multi-conversation users by its id</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetChatUsers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetChatUsers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSetActivity:</TokenIdentifier>
			<Abstract type="html">Changes status of a user typing in conversation</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSetActivity:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSetActivity:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSearchDialogs:</TokenIdentifier>
			<Abstract type="html">Returns a list of found conversations of the current user by filled-in search bar</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSearchDialogs:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSearchDialogs:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesAddChatUser:</TokenIdentifier>
			<Abstract type="html">Adds new user to a multi-conversation</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesAddChatUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesAddChatUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesRemoveChatUser:</TokenIdentifier>
			<Abstract type="html">Removes a user from the multi-conversation, if the current user was a chat starter or invited a user to be removed.
Also it can be used for exit of the current user from the chat he/she participates in</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesRemoveChatUser:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesRemoveChatUser:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesGetLastActivity:</TokenIdentifier>
			<Abstract type="html">Returns current status and date of last activity of the specified user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesGetLastActivity:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesGetLastActivity:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesSetChatPhoto:</TokenIdentifier>
			<Abstract type="html">Sets a picture as cover picture in a multichat. To upload the picture use photos.getChatUploadServer</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesSetChatPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesSetChatPhoto:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/messagesDeleteChatPhoto:</TokenIdentifier>
			<Abstract type="html">Deletes a multichat cover picture</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)messagesDeleteChatPhoto:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/messagesDeleteChatPhoto:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesGet:</TokenIdentifier>
			<Abstract type="html">Returns a list of notes created by a user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesGetByID:</TokenIdentifier>
			<Abstract type="html">Returns a note by its ID</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesGetByID:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesGetByID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesGetFriendsNotes:</TokenIdentifier>
			<Abstract type="html">Returns a list of a user&apos;s friends&apos; notes</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesGetFriendsNotes:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesGetFriendsNotes:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesAdd:</TokenIdentifier>
			<Abstract type="html">Creates a new note for the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesEdit:</TokenIdentifier>
			<Abstract type="html">Edits a note of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a note of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments on a note</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesCreateComment:</TokenIdentifier>
			<Abstract type="html">Adds a new comment on a note</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesCreateComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesCreateComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesEditComment:</TokenIdentifier>
			<Abstract type="html">Edits a comment on a note</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesEditComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesDeleteComment:</TokenIdentifier>
			<Abstract type="html">Deletes a comment on a note</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesDeleteComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/notesRestoreComment:</TokenIdentifier>
			<Abstract type="html">Restores a deleted comment on a note</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)notesRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/notesRestoreComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/statusGet:</TokenIdentifier>
			<Abstract type="html">Returns text of the status of a user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)statusGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/statusGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/statusSet:</TokenIdentifier>
			<Abstract type="html">Sets a new status for the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)statusSet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/statusSet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGet:</TokenIdentifier>
			<Abstract type="html">Returns detailed information about videos</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEdit:</TokenIdentifier>
			<Abstract type="html">Edits video information on a user&apos;s page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEdit:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoEdit:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoAdd:</TokenIdentifier>
			<Abstract type="html">Adds a video to user list</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoSave:</TokenIdentifier>
			<Abstract type="html">Returns a server address (required for upload) and video data</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoSave:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoSave:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDelete:</TokenIdentifier>
			<Abstract type="html">Deletes a video from user&apos;s page</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRestore:</TokenIdentifier>
			<Abstract type="html">Restores a video after being deleted</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRestore:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoRestore:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoSearch:</TokenIdentifier>
			<Abstract type="html">Returns a list of videos under the set search criteria</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoSearch:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoSearch:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetUserVideos:</TokenIdentifier>
			<Abstract type="html">Returns list of videos in which the user is tagged</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetUserVideos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetUserVideos:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetAlbums:</TokenIdentifier>
			<Abstract type="html">Returns a list of video albums owned by the user or community</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetAlbums:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetAlbums:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoAddAlbum:</TokenIdentifier>
			<Abstract type="html">Creates an empty album for videos</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoAddAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoAddAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEditAlbum:</TokenIdentifier>
			<Abstract type="html">Edits the name of a video album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEditAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoEditAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDeleteAlbum:</TokenIdentifier>
			<Abstract type="html">Deletes a video album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDeleteAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoDeleteAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoMoveToAlbum:</TokenIdentifier>
			<Abstract type="html">Moves videos to an album</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoMoveToAlbum:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoMoveToAlbum:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetComments:</TokenIdentifier>
			<Abstract type="html">Returns a list of comments on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetComments:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetComments:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoCreateComment:</TokenIdentifier>
			<Abstract type="html">Adds a new comment on the video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoCreateComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoCreateComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoDeleteComment:</TokenIdentifier>
			<Abstract type="html">Deletes a comment on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoDeleteComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoDeleteComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRestoreComment:</TokenIdentifier>
			<Abstract type="html">Restores a comment on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRestoreComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoRestoreComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoEditComment:</TokenIdentifier>
			<Abstract type="html">Edits the text of a comment on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoEditComment:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoEditComment:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetTags:</TokenIdentifier>
			<Abstract type="html">Returns a list of tags on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoPutTag:</TokenIdentifier>
			<Abstract type="html">Adds a tag on a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoPutTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoPutTag:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoRemoveTag:</TokenIdentifier>
			<Abstract type="html">Removes a tag from a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoRemoveTag:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoRemoveTag:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoGetNewTags:</TokenIdentifier>
			<Abstract type="html">Returns a list of videos with tags that have not been viewed</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoGetNewTags:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoGetNewTags:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/videoReport:</TokenIdentifier>
			<Abstract type="html">Allows to report a video</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)videoReport:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/videoReport:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesGetList:</TokenIdentifier>
			<Abstract type="html">Returns a list of IDs of users who added the specified object to their Likes list</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesGetList:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/likesGetList:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesAdd:</TokenIdentifier>
			<Abstract type="html">Adds the specified object to the Likes list of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesAdd:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/likesAdd:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesDelete:</TokenIdentifier>
			<Abstract type="html">Deletes the specified object from the Likes list of the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesDelete:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/likesDelete:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/likesIsLiked:</TokenIdentifier>
			<Abstract type="html">Checks if the object is in Likes list of the specified user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)likesIsLiked:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/likesIsLiked:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/faveGetUsers:</TokenIdentifier>
			<Abstract type="html">Returns a list of users who are added to Bookmarks by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)faveGetUsers:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/faveGetUsers:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/faveGetPhotos:</TokenIdentifier>
			<Abstract type="html">Returns a list of photos marked as Liked by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)faveGetPhotos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/faveGetPhotos:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/faveGetPosts:</TokenIdentifier>
			<Abstract type="html">Returns a list of wall posts marked as Liked by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)faveGetPosts:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/faveGetPosts:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/faveGetVideos:</TokenIdentifier>
			<Abstract type="html">Returns a list of videos marked as Liked by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)faveGetVideos:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/faveGetVideos:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/faveGetLinks:</TokenIdentifier>
			<Abstract type="html">Returns a list of links who are added to Bookmarks by the current user</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)faveGetLinks:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/faveGetLinks:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/statsGet:</TokenIdentifier>
			<Abstract type="html">Returns statistics of a community or an application</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)statsGet:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/statsGet:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/VKUser/searchGetHints:</TokenIdentifier>
			<Abstract type="html">Returns quick search results with a random substring</Abstract>
			<DeclaredIn>VKUser.h</DeclaredIn>			
			
			<Declaration>- (VKRequest *)searchGetHints:(NSDictionary *)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">parameters list</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">VKRequest instance which incapsulates all required parameters for requesting
user information. Delayed execution and request canceling also available.</Abstract></ReturnValue>
			<Anchor>//api/name/searchGetHints:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
	</File>
</Tokens>